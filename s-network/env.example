# ===========================================
# SOCIAL NETWORK APPLICATION CONFIGURATION
# ===========================================
# Copy this file to .env.local and fill in your values

# -----------------
# FRONTEND CONFIG
# -----------------

# Backend API URL (used by frontend to connect to backend)
# Development: http://localhost:8080
# Production: https://your-backend-domain.com
NEXT_PUBLIC_BACKEND_URL=http://localhost:8080

# Application Environment
# Options: development, production, test
NODE_ENV=development

# Next.js Configuration
NEXT_TELEMETRY_DISABLED=1
WATCHPACK_POLLING=true

# -----------------
# BACKEND CONFIG
# -----------------

# Server Configuration
PORT=8080
HOST=0.0.0.0

# Database Configuration
DATABASE_URL=sqlite:///data/social-network.db
DATABASE_MAX_CONNECTIONS=25
DATABASE_TIMEOUT=30s

# Authentication & Security
JWT_SECRET=your-super-secret-jwt-key-change-in-production-min-32-chars
JWT_EXPIRATION=24h
SESSION_SECRET=your-session-secret-key-change-in-production
SESSION_MAX_AGE=604800

# CORS Configuration
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# File Upload Configuration
UPLOAD_MAX_SIZE=10485760
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,image/webp
UPLOAD_PATH=./uploads

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE=./logs/app.log

# Rate Limiting
RATE_LIMIT_WINDOW=15m
RATE_LIMIT_MAX_REQUESTS=100

# WebSocket Configuration
WS_MAX_CONNECTIONS=1000
WS_PING_INTERVAL=30s
WS_PONG_TIMEOUT=10s

# -----------------
# DOCKER CONFIG
# -----------------

# Docker Compose Environment
COMPOSE_PROJECT_NAME=social-network
COMPOSE_FILE=docker-compose.yml

# Container Configuration
BACKEND_PORT=8080
FRONTEND_PORT=3000

# Volume Paths
BACKEND_DATA_PATH=./data
BACKEND_UPLOADS_PATH=./uploads

# -----------------
# MONITORING & ANALYTICS
# -----------------

# Enable/Disable Features
ENABLE_ANALYTICS=false
ENABLE_ERROR_REPORTING=false
ENABLE_PERFORMANCE_MONITORING=false

# External Services (Optional)
# SENTRY_DSN=your-sentry-dsn
# GOOGLE_ANALYTICS_ID=your-ga-id
# REDIS_URL=redis://localhost:6379

# -----------------
# DEVELOPMENT ONLY
# -----------------

# Debug Configuration
DEBUG=false
VERBOSE_LOGGING=false
ENABLE_PROFILING=false

# Database Seeding
SEED_DATABASE=false
SEED_USERS_COUNT=10
SEED_POSTS_COUNT=50

# -----------------
# PRODUCTION ONLY
# -----------------

# SSL Configuration
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem
# FORCE_HTTPS=true

# CDN Configuration
# CDN_URL=https://your-cdn-domain.com
# STATIC_FILES_CDN=true

# Database Backup
# BACKUP_ENABLED=true
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30

# ===========================================
# SECURITY NOTES
# ===========================================
# 1. Never commit .env files to version control
# 2. Use strong, unique secrets for JWT_SECRET and SESSION_SECRET
# 3. Change default secrets before production deployment
# 4. Restrict CORS_ORIGIN to your actual frontend domain in production
# 5. Use HTTPS in production
# 6. Consider using environment-specific .env files:
#    - .env.local (local development)
#    - .env.staging (staging environment)
#    - .env.production (production environment) 